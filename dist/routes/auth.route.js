"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const express_1 = __importDefault(require("express"));
const signup_controller_1 = __importDefault(require("../controllers/signup.controller"));
const login_controller_1 = __importDefault(require("../controllers/login.controller"));
const health_controller_1 = __importDefault(require("../controllers/health.controller"));
const inputValidation_middleware_1 = __importDefault(require("../middlewares/inputValidation.middleware"));
const validateHeaderData_middleware_1 = __importDefault(require("../middlewares/validateHeaderData.middleware"));
const forgotPassword_controller_1 = __importDefault(require("../controllers/forgotPassword.controller"));
const authGuard_middleware_1 = __importDefault(require("../middlewares/authGuard.middleware"));
const validateHeaderMiddleware = new validateHeaderData_middleware_1.default();
const validateHeaderForUsernameAndPassword = validateHeaderMiddleware.validateHeaderForUsernameAndPassword;
const validateHeaderForUsername = validateHeaderMiddleware.validateHeaderForUsername;
const validateHeaderForUsernameSecurityCode = validateHeaderMiddleware.validateHeaderForUsernameAndSecurityCode;
const inputValidationMiddleware = new inputValidation_middleware_1.default();
const validateSignupData = inputValidationMiddleware.validateSignupData;
const validateResetPasswordData = inputValidationMiddleware.validateResetPasswordData;
const protectRoute = new authGuard_middleware_1.default().protectRoute;
const checkHealth = new health_controller_1.default().checkHealth;
const signupController = new signup_controller_1.default();
const signup = signupController.signup.bind(signupController);
const loginController = new login_controller_1.default();
const login = loginController.login.bind(loginController);
const forgetPasswordController = new forgotPassword_controller_1.default();
const emailSecurityCode = forgetPasswordController.getSecurityCode.bind(forgetPasswordController);
const verifySecurityCode = forgetPasswordController.verifySecurityCode.bind(forgetPasswordController);
const resetPassword = forgetPasswordController.resetPassword.bind(forgetPasswordController);
const router = express_1.default.Router();
router.post("/signup", validateHeaderForUsernameAndPassword, validateSignupData, signup);
router.post("/login", validateHeaderForUsernameAndPassword, login);
router.get("/forgotPassword/getSecurityCode", validateHeaderForUsername, emailSecurityCode);
router.get("/forgotPassword/verifySecurityCode", validateHeaderForUsernameSecurityCode, verifySecurityCode);
router.post("/forgotPassword/resetPassword", protectRoute(["candidate", "recruiter"]), validateHeaderForUsernameAndPassword, validateResetPasswordData, resetPassword);
router.get("/health", checkHealth);
exports.default = router;
//# sourceMappingURL=auth.route.js.map