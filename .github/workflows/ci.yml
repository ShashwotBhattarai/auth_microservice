name: CI/CD Auth microservice

on:
  push:
    branches:
      - cicd
  pull_request:
    branches:
      - cicd

jobs:
  # lint:
  #   runs-on: ubuntu-latest

  #   steps:
  #     - name: Checkout code
  #       uses: actions/checkout@v2

  #     - name: Setup Node.js
  #       uses: actions/setup-node@v2
  #       with:
  #         node-version: 20

  #     - name: Install dependencies
  #       run: npm install

  #     - name: Run ESLint
  #       run: npm run lint

  build:
    runs-on: ubuntu-latest
    # needs:
    #   - lint
      
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      
      - name: Setup Node.js
        uses: actions/setup-node@v2
        with:
          node-version: 20
      
      - name: Install dependencies
        run: npm install
      
      - name: Build project
        run: npm run build

      - name: Archive build output
        run: |
          mkdir -p $GITHUB_WORKSPACE/build
          cp -r dist/* $GITHUB_WORKSPACE/build/
        # Assuming your build output is in the "dist" directory

  # test:
  #   runs-on: ubuntu-latest
  #   needs:
  #     - lint
  #     - build
      
  #   steps:
  #     - name: Checkout code
  #       uses: actions/checkout@v2
      
  #     - name: Setup Node.js
  #       uses: actions/setup-node@v2
  #       with:
  #         node-version: 20
      
  #     - name: Install dependencies
  #       run: npm install
      
  #     - name: Run unit tests
  #       run: npm test
    
  # sonarcloud:
  #         name: SonarCloud
  #         runs-on: ubuntu-latest
  #         needs:
  #           - lint
  #           - build
  #           - test
  #         steps:
  #           - uses: actions/checkout@v3
  #             with:
  #               fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis
  #           - name: SonarCloud Scan
  #             uses: SonarSource/sonarcloud-github-action@master
  #             env:
  #               GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information, if any
  #               SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

  #           - name: SonarQube Quality Gate check
  #             id: sonarqube-quality-gate-check
  #             uses: sonarsource/sonarqube-quality-gate-action@master
  #             env:
  #                SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
  #                SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }} #OPTIONAL    

  build-and-push:
    runs-on: ubuntu-latest
    needs: 
      - build
    steps:
                  - name: Check Out Repo
                    uses: actions/checkout@v2
              
                  - name: Log in to Docker Hub
                    uses: docker/login-action@v1
                    with:
                      username: ${{ secrets.DOCKER_USERNAME }}
                      password: ${{ secrets.DOCKER_PASSWORD }}

                  - name: List build directory contents
                    run: ls -la ./build/dist
              
                  - name: Build and Push Docker image
                    uses: docker/build-push-action@v2
                    with:
                      context: .
                      file: ./Dockerfile
                      push: true
                      tags: shashwotbhattarai/auth_microservice  # Replace with your Docker Hub username and repository
              
                  - name: Verify Pushed Image
                    run: docker pull 100xdevs/web-app:latest  # Replace with your Docker Hub username and repository
              
